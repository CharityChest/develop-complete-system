version: '3'

services:
  cc-db-developing:
    image: mysql:8.0.33-debian
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
  cc-redis-develop:
    image: redis:7.0.12-alpine3.18
    command: redis-server --user ${REDIS_USERNAME} on +@all ~* \>${REDIS_PASSWORD}
    ports:
      - "6379:6379"
  mailhog-develop:
    container_name: mailhog-develop
    image: mailhog/mailhog
    logging:
      driver: 'none'  # disable saving logs
    ports:
      - "1026:1025" # smtp server
      - "8026:8025" # web ui
  cc-backend-develop:
    image: charity-chest/cc-backend-develop
    build:
      context: ../cc-backend
      dockerfile: ./docker/develop/Dockerfile
      args:
        - GOLANG_VERSION=${CC_BACKEND_GOLANG_VERSION}
        - ALPINE_VERSION=${CC_BACKEND_ALPINE_VERSION}
    ports:
      - "8080:8080"
      - "8000:8000"
      - "40000:40000"
    depends_on:
      - cc-db-developing
    environment:
      DB_HOST: "cc-db-developing"
      DB_PORT: "3306"
      DB_USER: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}
      DB_NAME: "cc_backend_develop"
  cc-backend-root-console-develop:
    image: charity-chest/cc-backend-root-console-develop
    build:
      context: ../cc-backend-root-console
      dockerfile: ./docker/develop/Dockerfile
      args:
        - GOLANG_VERSION=${CC_BACKEND_ROOT_CONSOLE_GOLANG_VERSION}
        - ALPINE_VERSION=${CC_BACKEND_ROOT_CONSOLE_ALPINE_VERSION}
    ports:
      - "8081:8080"
      - "8001:8000"
      - "40001:40000"
    depends_on:
      - cc-db-developing
    environment:
      DB_HOST: "cc-db-developing"
      DB_PORT: "3306"
      DB_USER: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}
      DB_NAME: "cc_backend_root_console_develop"
  cc-root-console:
    image: charity-chest/cc-root-console-develop
    build:
      context: ../cc-root-console/cc-root-console
      dockerfile: ../docker/develop/Dockerfile
      args:
        - NODE_VERSION=${CC_ROOT_CONSOLE_NODE_VERSION}
        - ALPINE_VERSION=${CC_ROOT_CONSOLE_ALPINE_VERSION}
    ports:
      - "3000:3000"
    depends_on:
      - cc-backend-root-console-develop
    volumes:
      - ../cc-root-console/cc-root-console:/code
    environment:
        BACKEND_HOST: "cc-backend-root-console-develop"
        BACKEND_PORT: "8080"
        BACKEND_PROTOCOL: "http"
        BACKEND_BASE_URI: "api/v1"
        EMAIL_SERVER_HOST: "mailhog-develop"
        EMAIL_SERVER_PORT: 1026
        EMAIL_SERVER_USER: ""
        EMAIL_SERVER_PASSWORD: ""
        EMAIL_SERVER_FROM: "\"Charity Chest <develop>\""
        REDIS_HOST: "cc-redis-develop"
        REDIS_PORT: 6379
        REDIS_USER: ${REDIS_USERNAME}
        REDIS_PASSWORD: ${REDIS_PASSWORD}
        REDIS_DB: ${REDIS_DB}
        AUTH_ENTRIES: ${AUTH_ENTRIES}
        SECRET: ${SECRET}
        ENVIRONMENT: "development"
  cc-oauth2-forward-tool-server:
    image: charity-chest/oauth2-forward-tool-server-develop
    build:
      context: ../oauth2-forward-tool-server/server
      dockerfile: ../docker/develop/Dockerfile
      args:
        - NODE_VERSION=${OAUTH2_SERVER_NODE_VERSION}
        - ALPINE_VERSION=${OAUTH2_SERVER_ALPINE_VERSION}
    ports:
      - "3001:3000"
    volumes:
      - ../oauth2-forward-tool-server/server:/code
    environment:
      EMAIL_SERVER_HOST: "mailhog-develop"
      EMAIL_SERVER_PORT: 1026
      EMAIL_SERVER_USER: ""
      EMAIL_SERVER_PASSWORD: ""
      EMAIL_SERVER_FROM: "\"Charity Chest <develop>\""
      REDIS_HOST: "cc-redis-develop"
      REDIS_PORT: 6379
      REDIS_USER: ${REDIS_USERNAME}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_AUTH_DB: ${REDIS_AUTH_DB}
      AUTH_ENTRIES: ${AUTH_ENTRIES}
      SECRET: ${SECRET}
      ENVIRONMENT: "development"